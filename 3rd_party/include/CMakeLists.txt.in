cmake_minimum_required(VERSION 3.5)

cmake_policy(SET CMP0135 NEW)
cmake_policy(SET CMP0043 NEW)
cmake_policy(SET CMP0077 NEW)

project(3rd-party-${LIB_NAME} NONE)

include(ExternalProject)

ExternalProject_Add(${LIB_NAME}
  URL               "${LIB_URL}"
  SOURCE_DIR        "${LIB_SOURCE_DIR}"
  BINARY_DIR        "${LIB_BUILD_DIR}"
  INSTALL_DIR       "${LIB_INSTALL_DIR}"
  SOURCE_SUBDIR     "${LIB_SOURCE_SUBDIR}"
  PATCH_COMMAND     "${LIB_PATCH_COMMAND}"
  CMAKE_GENERATOR   "${CMAKE_GENERATOR}"
  CMAKE_ARGS        "-DCMAKE_INSTALL_PREFIX=${LIB_INSTALL_DIR};"
                    "-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE};"
                    "-Wno-dev;"
                    "${LIB_CMAKE_FLAGS}"
  CMAKE_CACHE_ARGS  "-DCMAKE_PREFIX_PATH:STRING=${CMAKE_PREFIX_PATH};"
                    "-DCMAKE_CXX_STANDARD:STRING=${CMAKE_CXX_STANDARD};"
                    "-DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER};"
                    "-DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS} -w"
                    "-DCMAKE_C_STANDARD:STRING=${CMAKE_C_STANDARD};"
                    "-DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER};"
                    "-DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS} -w"
                    "-DCMAKE_MODULE_LINKER_FLAGS:STRING=${CMAKE_MODULE_LINKER_FLAGS};"
  TEST_COMMAND      ""
)
